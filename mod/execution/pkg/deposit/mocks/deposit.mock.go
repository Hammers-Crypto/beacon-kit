// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	bytes "github.com/berachain/beacon-kit/mod/primitives/pkg/bytes"

	math "github.com/berachain/beacon-kit/mod/primitives/pkg/math"

	mock "github.com/stretchr/testify/mock"
)

// Deposit is an autogenerated mock type for the Deposit type
type Deposit[DepositT interface{}, WithdrawalCredentialsT interface{}] struct {
	mock.Mock
}

type Deposit_Expecter[DepositT interface{}, WithdrawalCredentialsT interface{}] struct {
	mock *mock.Mock
}

func (_m *Deposit[DepositT, WithdrawalCredentialsT]) EXPECT() *Deposit_Expecter[DepositT, WithdrawalCredentialsT] {
	return &Deposit_Expecter[DepositT, WithdrawalCredentialsT]{mock: &_m.Mock}
}

// GetIndex provides a mock function with given fields:
func (_m *Deposit[DepositT, WithdrawalCredentialsT]) GetIndex() uint64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetIndex")
	}

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// Deposit_GetIndex_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetIndex'
type Deposit_GetIndex_Call[DepositT interface{}, WithdrawalCredentialsT interface{}] struct {
	*mock.Call
}

// GetIndex is a helper method to define mock.On call
func (_e *Deposit_Expecter[DepositT, WithdrawalCredentialsT]) GetIndex() *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT] {
	return &Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT]{Call: _e.mock.On("GetIndex")}
}

func (_c *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT]) Run(run func()) *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT]) Return(_a0 uint64) *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT]) RunAndReturn(run func() uint64) *Deposit_GetIndex_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Return(run)
	return _c
}

// New provides a mock function with given fields: _a0, _a1, _a2, _a3, _a4
func (_m *Deposit[DepositT, WithdrawalCredentialsT]) New(_a0 bytes.B48, _a1 WithdrawalCredentialsT, _a2 math.U64, _a3 bytes.B96, _a4 uint64) DepositT {
	ret := _m.Called(_a0, _a1, _a2, _a3, _a4)

	if len(ret) == 0 {
		panic("no return value specified for New")
	}

	var r0 DepositT
	if rf, ok := ret.Get(0).(func(bytes.B48, WithdrawalCredentialsT, math.U64, bytes.B96, uint64) DepositT); ok {
		r0 = rf(_a0, _a1, _a2, _a3, _a4)
	} else {
		r0 = ret.Get(0).(DepositT)
	}

	return r0
}

// Deposit_New_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'New'
type Deposit_New_Call[DepositT interface{}, WithdrawalCredentialsT interface{}] struct {
	*mock.Call
}

// New is a helper method to define mock.On call
//   - _a0 bytes.B48
//   - _a1 WithdrawalCredentialsT
//   - _a2 math.U64
//   - _a3 bytes.B96
//   - _a4 uint64
func (_e *Deposit_Expecter[DepositT, WithdrawalCredentialsT]) New(_a0 interface{}, _a1 interface{}, _a2 interface{}, _a3 interface{}, _a4 interface{}) *Deposit_New_Call[DepositT, WithdrawalCredentialsT] {
	return &Deposit_New_Call[DepositT, WithdrawalCredentialsT]{Call: _e.mock.On("New", _a0, _a1, _a2, _a3, _a4)}
}

func (_c *Deposit_New_Call[DepositT, WithdrawalCredentialsT]) Run(run func(_a0 bytes.B48, _a1 WithdrawalCredentialsT, _a2 math.U64, _a3 bytes.B96, _a4 uint64)) *Deposit_New_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bytes.B48), args[1].(WithdrawalCredentialsT), args[2].(math.U64), args[3].(bytes.B96), args[4].(uint64))
	})
	return _c
}

func (_c *Deposit_New_Call[DepositT, WithdrawalCredentialsT]) Return(_a0 DepositT) *Deposit_New_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Deposit_New_Call[DepositT, WithdrawalCredentialsT]) RunAndReturn(run func(bytes.B48, WithdrawalCredentialsT, math.U64, bytes.B96, uint64) DepositT) *Deposit_New_Call[DepositT, WithdrawalCredentialsT] {
	_c.Call.Return(run)
	return _c
}

// NewDeposit creates a new instance of Deposit. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDeposit[DepositT interface{}, WithdrawalCredentialsT interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *Deposit[DepositT, WithdrawalCredentialsT] {
	mock := &Deposit[DepositT, WithdrawalCredentialsT]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
